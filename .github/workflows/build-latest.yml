# Build for latest Meteor release
name: 'Build: latest'
run-name: '🐋 Build: latest | ${{ github.event.head_commit.message || github.event.pull_request.title }}'
on:
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - master

permissions:
  packages: write

jobs:
  versions:
    name: 'Query latest Meteor version'
    runs-on: ubuntu-22.04
    outputs:
      latest: ${{ steps.version.outputs.latest }}
      beta: ${{ steps.version.outputs.beta }}
      alpha: ${{ steps.version.outputs.alpha }}
      rc: ${{ steps.version.outputs.rc }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
      - name: Get latest Meteor version
        id: version
        # language="bashsupport pro shell script"
        run: |
          for tag in latest beta alpha rc; do
            version="$(npm view meteor dist-tags.$tag)"
            echo "meteor@$tag => $version"
            
            echo "$tag=$version" >> $GITHUB_OUTPUT
          done
  build:
    name: Build
    uses: ./.github/workflows/_build.yml
    needs: versions
    continue-on-error: ${{ matrix.ignore-error }}
    with:
      meteor_version: ${{ matrix.version }}
      meteor_tag: ${{ matrix.tag }}
    strategy:
      matrix:
        include:
            -
              tag: latest
              version: ${{ needs.versions.outputs.latest }}
            -
              tag: beta
              version: ${{ needs.versions.outputs.beta }}
              ignore-error: true
            -
              tag: alpha
              version: ${{ needs.versions.outputs.alpha }}
              ignore-error: true
            -
              tag: rc
              version: ${{ needs.versions.outputs.rc }}
              ignore-error: true
