name: 'Build/Push'

on:
  workflow_call:
    inputs:
      meteor_version:
        required: true
        type: string
        description: Meteor version to build
      meteor_tag:
        type: string
        description: Version tag to use alongside exact version (e.g. latest, alpha, beta, etc.)
        default: latest
      docker_registry:
        type: string
        default: ghcr.io
      docker_image_name:
        type: string
        description: Docker username - will be used in image tag and for authentication.
        default: meteor-base
      docker_push:
        type: boolean
        default: true
      docker_username:
        type: string
        default: ${{ github.actor }}
    secrets:
      docker_password:
        required: false
        description: Password to use when authenticating with registry

jobs:
  image:
    name: ${{ inputs.docker_push && 'Push' || 'Image' }}
    runs-on: ubuntu-22.04
    env:
      FULL_IMAGE_NAME: ${{ format('{0}/{1}/{2}', inputs.docker_registry, github.repository_owner, inputs.docker_image_name) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to registry
        uses: docker/login-action@v3
        with:
          username: ${{ inputs.docker_username }}
          password: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}
          registry: ${{ inputs.docker_registry }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Format image
        id: image
        # language="bashsupport pro shell script"
        run: |
          imageName="$(echo $FULL_IMAGE_NAME | tr '[:upper:]' '[:lower:]')"
          tags="$imageName:${{ inputs.meteor_version }},$imageName:${{ inputs.meteor_tag }}"
          cacheTag="$imageName:buildcache"
          
          echo "cacheTag=${cacheTag}"   >> $GITHUB_OUTPUT
          echo "tags=${tags}"           >> $GITHUB_OUTPUT
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ inputs.docker_push }}
          tags: ${{ steps.image.outputs.tags }}
          context: ./src
          cache-from: type=registry,ref=${{ steps.image.outputs.cacheTag }}
          cache-to: type=registry,ref=${{ steps.image.outputs.cacheTag }},mode=max
          build-args: |
            METEOR_VERSION=${{ inputs.meteor_version }}


